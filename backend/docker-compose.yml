version: '3.7'
services:
  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - backend
    depends_on:
      mongodb:
        condition: service_healthy
  
  booking-service:
    build:
      context: ./services/booking-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    networks:
      - backend
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy

  driver-service:
    build:
      context: ./services/driver-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    networks:
      - backend
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy

  notification-service:
    build:
      context: ./services/notification-service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    networks:
      - backend
    depends_on:
      rabbitmq:
        condition: service_healthy

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "rabbitmqctl status"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
  
  mongodb:
    image: mongo:4.2
    ports:
      - "27017:27017"
    networks:
      - backend
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s

networks:
  backend:
